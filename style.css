/* style.css */

:root {
    --primary-dark-blue: #00164e;  /* Deep blue for background */
    --primary-orange: #FF6F00;     /* Bright orange for accents, buttons */
    --secondary-orange-light: #FFA400; /* Lighter orange for hovers */
    --accent-blue-light: #5090D0; /* Lighter blue for some elements or hovers */
    --text-primary-on-dark: #F0F4F8; /* Very light, almost white text on dark background */
    --text-secondary-on-dark: #A9BCD0; /* Light grey-blue for secondary text */
    --text-on-orange: #FFFFFF;         /* White text on orange buttons */
    --background-content: #103A5F; /* Slightly lighter dark blue for containers */
    --border-color: #2A628F;         /* Blue for borders, less contrast */
    --shadow-color: rgba(0, 0, 0, 0.25); /* Color for shadows */
    --success-color: #4CAF50;          /* Green for success (can be kept or adapted) */
    --danger-color: #D9534F;          /* Red for errors (can be kept or adapted) */

    --font-family: 'Open Sans', sans-serif;
    --border-radius-large: 25px;   /* Significantly rounded corners for buttons and cards */
    --border-radius-medium: 15px;  /* Medium rounding for smaller elements */
    --border-radius-small: 8px;    /* Small rounding */

    --shadow-main: 0 6px 18px var(--shadow-color); /* More expressive shadow */
    --shadow-interactive: 0 4px 12px rgba(255, 140, 0, 0.3); /* Shadow with orange tint for interactive elements */
    --shadow-lifted: 0 10px 25px rgba(0, 0, 0, 0.3); /* More lifted shadow */

    --transition-main: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1); /* Smoother animation */
    --transition-fast: all 0.25s ease-out;
    --transition-smooth-bounce: all 0.5s cubic-bezier(0.68, -0.55, 0.27, 1.55); /* Smoother bounce effect */


    --padding-xlarge: 40px;
    --padding-large: 30px;
    --padding-medium: 20px;
    --padding-small: 15px;
    --padding-xsmall: 10px;
}

/* Adds a very slow, almost imperceptible shift in the background color of the body. */
@keyframes subtleBackgroundShift {
    0% { background-color: var(--primary-dark-blue); }
    50% { background-color: #021D60; } /* Slightly different shade from the original dark blue */
    100% { background-color: var(--primary-dark-blue); }
}

body {
    font-family: var(--font-family);
    margin: 0;
    padding: var(--padding-medium);
    background-color: var(--primary-dark-blue); /* Reverted to original deep blue */
    color: var(--text-primary-on-dark);
    line-height: 1.7;
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
    overflow-x: hidden; /* Prevent horizontal scroll due to animations */
    animation: subtleBackgroundShift 25s infinite linear; /* New subtle background animation, slightly slower */
}

/* Question Counter */
.question-counter {
    position: fixed; /* Fixed position relative to the viewport */
    top: var(--padding-medium); /* Distance from the top */
    right: var(--padding-medium); /* Distance from the right */
    background-color: var(--background-content);
    padding: var(--padding-xsmall) var(--padding-small);
    border-radius: var(--border-radius-large);
    box-shadow: var(--shadow-main);
    color: var(--primary-orange);
    font-weight: 700;
    font-size: 1.1em;
    z-index: 1000; /* Ensure it stays on top */
    display: flex;
    align-items: center;
    gap: 5px;
    opacity: 0; /* Initial state for animation */
    animation: fadeInScaleUp 0.6s 0.8s ease-out forwards; /* Appear with a delay */
    transition: var(--transition-main);
}

.question-counter:hover {
    transform: translateY(-3px) scale(1.05);
    box-shadow: var(--shadow-interactive);
    color: var(--secondary-orange-light);
}

.question-counter span {
    color: var(--text-primary-on-dark);
}

.question-counter .current-questions,
.question-counter .total-questions {
    display: inline-block; /* For individual animation if desired later */
}

.container {
    max-width: 850px;
    width: 90%; /* Using percentages for better responsiveness */
    margin: var(--padding-medium) auto;
    background-color: var(--background-content);
    padding: var(--padding-large);
    border-radius: var(--border-radius-large);
    box-shadow: var(--shadow-main);
    transition: var(--transition-main), transform 0.3s ease, box-shadow 0.3s ease; /* Added transform and shadow to transition */
}

/* The main content container now gently lifts and gets a more pronounced shadow on hover. */
.container:hover {
    transform: translateY(-5px); /* Gentle lift on hover */
    box-shadow: var(--shadow-lifted); /* More pronounced shadow on hover */
}

h1, h2, h3 {
    text-align: center;
    margin-bottom: var(--padding-medium);
    font-weight: 700;
    transition: color 0.3s ease, transform 0.3s ease; /* Added transform for potential hover effects */
}

/* Example for a text reveal animation if needed for headings or important snippets. */
.reveal-text {
    animation: revealText 1s forwards cubic-bezier(0.25, 0.8, 0.25, 1);
    opacity: 0;
}

@keyframes revealText {
    0% {
        opacity: 0;
        transform: translateY(15px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}


h1 {
    color: var(--primary-orange); /* Orange for the main heading */
    margin-bottom: var(--padding-large);
    font-size: 2.4em;
    text-shadow: 1px 1px 3px rgba(0,0,0,0.2);
}
/* A subtle scale effect is added to the main heading on hover. */
h1:hover {
    transform: scale(1.02); /* Slight scale on hover */
}

h2 {
    color: var(--secondary-orange-light); /* Lighter orange for H2 */
    font-size: 1.8em;
}

h3 {
    font-size: 1.5em;
    color: var(--accent-blue-light); /* Light blue for H3 */
}

p {
    text-align: center;
    margin-bottom: var(--padding-medium);
    color: var(--text-secondary-on-dark);
    font-size: 1.05em;
    animation: fadeInText 0.8s ease-out forwards; /* Added subtle fade in for paragraphs */
    opacity: 0; /* Initial state for animation */
}

/* Paragraphs now fade in gently when they become visible. */
@keyframes fadeInText {
    to {
        opacity: 1;
    }
}
/* Delay for subsequent paragraphs if needed with JS or :nth-child if structure is fixed */
/* p:nth-of-type(2) { animation-delay: 0.2s; } */
/* p:nth-of-type(3) { animation-delay: 0.4s; } */


.page {
    display: none;
    /* The existing page transition animation is refined with a different cubic-bezier timing function. */
    animation: slideUpFadeInEnhanced 0.8s cubic-bezier(0.390, 0.575, 0.565, 1.000) forwards; /* Slightly slower */
}

.page.active {
    display: block;
}

/* Enhanced existing page appearance animation */
@keyframes slideUpFadeInEnhanced {
    0% {
        opacity: 0;
        transform: translateY(40px) scale(0.97);
    }
    100% {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

/* Alternative page/element appearance animation that fades in and scales up. */
@keyframes fadeInScaleUp {
    0% {
        opacity: 0;
        transform: scale(0.9);
    }
    100% {
        opacity: 1;
        transform: scale(1);
    }
}

.question {
    background-color: var(--primary-dark-blue); /* Darker background for contrast */
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-medium); /* Rounded edges */
    padding-top: var(--padding-medium);
    padding-left: var(--padding-medium);
    padding-right: var(--padding-medium);
    padding-bottom: var(--padding-small); 
    margin-bottom: var(--padding-medium);
    transition: var(--transition-main), box-shadow 0.4s ease, transform 0.4s ease, border-color 0.4s ease;
    box-shadow: 0 3px 8px rgba(0,0,0,0.15);
    position: relative; /* For possible pseudo-elements */
    overflow: hidden; /* So animations don't go outside boundaries */
}

.question:hover {
    transform: translateY(-7px) scale(1.03); /* More expressive animation on hover */
    box-shadow: var(--shadow-interactive);
    border-color: var(--primary-orange);
}

.question label {
    margin-bottom: var(--padding-small);
    font-weight: 600;
    font-size: 1.15rem;
    color: var(--text-primary-on-dark);
    display: block; /* Ensures margin-bottom works as expected */
    transition: color 0.3s ease;
}
/* The question label text color changes on hovering over the entire question block. */
.question:hover label {
    color: var(--secondary-orange-light); /* Change label color on question hover */
}

.question-options {
    display: flex;
    flex-wrap: wrap;
    gap: var(--padding-small);
    align-items: center;
    margin-top: var(--padding-xsmall);
}

.option-wrapper {
    display: flex;
    align-items: center;
    gap: var(--padding-xsmall);
    transition: transform 0.3s var(--transition-smooth-bounce); /* Using smooth bounce for option wrapper, slightly slower */
}

.option-wrapper:hover {
    transform: scale(1.08); /* Animation for option wrapper - slightly more pronounced */
}

input[type="radio"] {
    appearance: none;
    width: 24px;
    height: 24px;
    border: 2px solid var(--border-color);
    border-radius: 50%; /* Always round */
    cursor: pointer;
    position: relative;
    transition: var(--transition-fast), background-color 0.25s ease, border-color 0.25s ease; /* More properties for transition, slightly slower */
    background-color: transparent; /* Transparent background */
    flex-shrink: 0; /* Prevent shrinking in flex container */
}



/* Radio buttons now scale slightly on hover. */
input[type="radio"]:hover {
    border-color: var(--primary-orange);
    transform: scale(1.1); /* Slight scale on hover */
}

/* When a radio button is checked, it has a "pop" animation and an orange ring. */
input[type="radio"]:checked {
    border-color: var(--primary-orange);
    background-color: transparent; /* Inside of the ring is transparent (shows parent background) */
    animation: radioPop 0.35s ease-out; /* Animation for check, slightly slower */
    border-width: 5px; /* Optional: make the ring thicker when checked */
}

/* "Pop" animation for radio button selection. */
@keyframes radioPop {
    0% { transform: scale(0.8); opacity: 0.5; }
    50% { transform: scale(1.15); opacity: 0.75; }
    100% { transform: scale(1); opacity: 1; }
}

/* Checkmark has been removed as per request */
/* input[type="radio"]:checked::before { ... } */


.radio-label {
    font-size: 1rem;
    color: var(--text-secondary-on-dark);
    cursor: pointer;
    transition: color 0.25s ease, letter-spacing 0.25s ease; /* Added letter-spacing for subtle effect, slightly slower */
}

.radio-label:hover {
    color: var(--primary-orange);
    letter-spacing: 0.5px; /* Slight letter spacing increase on hover */
}

input[type="radio"]:checked + .radio-label {
    color: var(--primary-orange);
    font-weight: 600;
}

button {
    display: inline-block; /* Allows the button to have width based on content + padding */
    min-width: 200px;
    margin: var(--padding-medium) auto 0 auto;
    padding: var(--padding-small) var(--padding-large); /* Increased padding for "fluffiness" */
    font-size: 1.15rem;
    font-weight: 700; /* Bolder text */
    color: var(--text-on-orange);
    background: linear-gradient(145deg, var(--secondary-orange-light), var(--primary-orange)); /* Gradient for button */
    border: none;
    border-radius: var(--border-radius-large); /* Very rounded buttons */
    cursor: pointer;
    transition: var(--transition-main), transform 0.25s cubic-bezier(0.34, 1.56, 0.64, 1), box-shadow 0.35s ease; /* "Spring" effect, added box-shadow to transition, slightly slower */
    box-shadow: 0 4px 10px rgba(255, 140, 0, 0.3), 0 2px 5px rgba(0,0,0,0.1); /* Shadow with orange tint */
    text-align: center;
    position: relative; /* For potential pseudo-elements animations */
    overflow: hidden; /* For ripple or shine effects */
}
/* Centering the button if it's display: block */
.page button, .container > button {
    display: block;
}

/* Hover and active effects for buttons are slightly enhanced. */
button:hover:not(:disabled) {
    background: linear-gradient(145deg, var(--primary-orange), var(--secondary-orange-light)); /* Gradient change */
    transform: translateY(-4px) scale(1.06); /* Lifting and increasing size - slightly more */
    box-shadow: 0 7px 18px rgba(255, 140, 0, 0.45), 0 4px 8px rgba(0,0,0,0.2); /* Enhanced shadow */
}

button:active:not(:disabled) {
    transform: translateY(0px) scale(0.97); /* Press effect - slightly less down */
    box-shadow: 0 1px 4px rgba(255, 140, 0, 0.25);
}

button:disabled {
    background: var(--border-color);
    color: var(--text-secondary-on-dark);
    cursor: not-allowed;
    opacity: 0.6;
    box-shadow: none;
    transform: none !important; /* Ensure no transform on disabled */
}

button.secondary-button {
    background: transparent; /* Transparent background */
    color: var(--primary-orange);
    border: 2px solid var(--primary-orange); /* Orange outline */
    box-shadow: none;
}

button.secondary-button:hover:not(:disabled) {
    background: var(--primary-orange);
    color: var(--text-on-orange);
    border-color: var(--primary-orange);
    transform: translateY(-4px) scale(1.06); /* Consistent hover */
    box-shadow: 0 6px 15px rgba(255, 140, 0, 0.4);
}



/* "See Results" button styling */
#question-page-5 button, .page:last-child button:not(.secondary-button) { /* Ensure specificity and exclude secondary */
    background: linear-gradient(145deg, var(--accent-blue-light), #3071A9 ); /* Blue gradient for results */
    color: #FFFFFF;
    box-shadow: 0 4px 10px rgba(80, 144, 208, 0.3);
}

#question-page-5 button:hover:not(:disabled), .page:last-child button:not(.secondary-button):hover:not(:disabled) {
    background: linear-gradient(145deg, #3071A9, var(--accent-blue-light));
    box-shadow: 0 7px 18px rgba(80, 144, 208, 0.45); /* Enhanced shadow */
    transform: translateY(-4px) scale(1.06); /* Consistent hover */
}

.result-card {
    background-color: var(--primary-dark-blue);
    padding: var(--padding-large);
    margin-top: var(--padding-large);
    border-radius: var(--border-radius-large); /* Rounded edges */
    border: 1px solid var(--border-color);
    box-shadow: var(--shadow-main);
    /* The result card now animates in by fading and sliding up from the bottom. */
    animation: fadeInFromBottom 0.8s ease-out forwards;
    opacity: 0; /* Initial state for animation */
    overflow: hidden;
}

/* Animation for elements appearing by fading in from the bottom. */
@keyframes fadeInFromBottom {
    0% {
        opacity: 0;
        transform: translateY(20px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}


#results.result { /* This selector might need review, if #results is the card and .result is a class on it */
    display: none; /* This will be overridden by .page.active if #results is also a .page */
}
/* If #results is the container and has a class .result when active, then: */
/* #results.active { display: block; } */

/* The results heading has a reveal animation with a slight delay. */
#results h2 { /* Simplified selector assuming h2 is directly in #results */
    color: var(--primary-orange); /* Orange for results heading */
    animation: revealText 0.7s 0.2s forwards cubic-bezier(0.25, 0.8, 0.25, 1);
    opacity: 0; /* Initial state for animation */
}

/* The result code itself has a pop-in animation with a delay. */
#results .result-code { /* Simplified selector */
    font-size: 2.8em;
    font-weight: bold;
    color: var(--primary-orange);
    background-color: var(--background-content);
    border-radius: var(--border-radius-medium);
    padding: var(--padding-small) var(--padding-medium);
    margin-bottom: var(--padding-medium);
    text-align: center;
    box-shadow: inset 0 0 10px rgba(0,0,0,0.2);
    transition: transform 0.3s ease, color 0.3s ease; /* Added color transition */
    animation: popIn 0.6s 0.4s ease-out forwards; /* Slightly slower */
    opacity: 0; /* Initial state for animation */
    transform: scale(0.9); /* Initial state for animation */
}
#results .result-code:hover {
    transform: scale(1.05); /* Slightly larger hover scale */
    color: var(--secondary-orange-light);
}

/* Pop-in animation for elements. */
@keyframes popIn {
    to {
        opacity: 1;
        transform: scale(1);
    }
}

#results p { /* Simplified selector */
    text-align: left;
    color: var(--text-primary-on-dark);
    /* animation properties inherited from general p, or define specific one */
}

#results ul { /* Simplified selector */
    list-style: none;
    padding: 0;
    margin-top: var(--padding-small);
}



/* List items within results now fade and slide in from the left. */
#results li { /* Simplified selector */
    background-color: var(--background-content);
    border: 1px solid var(--border-color);
    padding: var(--padding-medium); /* Increased padding */
    margin-bottom: var(--padding-small);
    border-radius: var(--border-radius-medium); /* Rounded edges */
    transition: var(--transition-main), border-left-color 0.3s ease, border-left-width 0.3s ease, box-shadow 0.3s ease; /* Added more properties for transition */
    position: relative; /* For border animation */
    border-left: 4px solid transparent; /* Initial transparent border for animation */
    animation: listItemAppear 0.6s ease-out forwards; /* Slightly slower */
    opacity: 0; /* Initial state for animation */
    transform: translateX(-10px); /* Initial state for animation */
}

/* Animation for list items appearing. Can be staggered with JS. */
@keyframes listItemAppear {
    to {
        opacity: 1;
        transform: translateX(0);
    }
}
/* Example of how you might stagger with nth-child if the number of items is fixed */
/* #results li:nth-child(1) { animation-delay: 0.5s; }
#results li:nth-child(2) { animation-delay: 0.6s; }
#results li:nth-child(3) { animation-delay: 0.7s; } */

/* Hover effect on result list items animates the left border. */
#results li:hover {
    transform: translateX(8px) scale(1.01); /* Slightly different hover transform */
    border-left-color: var(--primary-orange); /* Animate border color */
    border-left-width: 6px; /* Animate border width */
    box-shadow: 0 5px 12px rgba(0,0,0,0.15);
}


#results li strong {
    color: var(--primary-orange);
    transition: color 0.2s ease;
}
#results li:hover strong {
    color: var(--secondary-orange-light);
}

/* Course and job sections have a delayed appearance animation. */
.course-links-section, .job-vacancies-section {
    margin-top: var(--padding-large);
    padding-top: var(--padding-medium);
    border-top: 1px solid var(--border-color);
    animation: fadeInFromBottom 0.7s 0.3s ease-out forwards;
    opacity: 0; /* Initial state for animation */
}

/* Headings within these sections also have a delayed reveal animation. */
.course-links-section h3, .job-vacancies-section h3 {
    color: var(--accent-blue-light); /* Light blue for subheadings */
    animation: revealText 0.6s 0.5s forwards cubic-bezier(0.25, 0.8, 0.25, 1);
    opacity: 0; /* Initial state for animation */
}

.course-links-section ul, .job-vacancies-section ul {
    list-style: none;
    padding-left: 0;
}

/* List items in course/job sections use the same appearance animation. */
.course-links-section li, .job-vacancies-section li {
    padding: var(--padding-xsmall) 0;
    margin-bottom: var(--padding-xsmall);
    border-bottom: 1px dashed var(--border-color);
    border-radius: var(--border-radius-small); /* Small rounding for list items */
    transition: background-color 0.2s ease, border-color 0.2s ease; /* Added border-color */
    animation: listItemAppear 0.6s ease-out forwards; /* Slightly slower */
    opacity: 0; /* Initial state for animation */
    transform: translateX(-10px); /* Initial state for animation */
    /* Add animation-delay if staggered effect is desired, e.g., with JS adding classes */
}
/* Staggering example with nth-child (if static or few items) */
/* .course-links-section li:nth-child(1) { animation-delay: 0.7s; }
.course-links-section li:nth-child(2) { animation-delay: 0.8s; } */


.course-links-section li:hover, .job-vacancies-section li:hover {
    background-color: rgba(255, 140, 0, 0.08); /* Light orange background on hover - slightly more visible */
    border-bottom-color: var(--secondary-orange-light); /* Change dashed line color on hover */
}

.course-links-section li:last-child, .job-vacancies-section li:last-child {
    border-bottom: none;
}


/* Links in course/job sections have an animated arrow on hover. */
.course-links-section a, .job-vacancies-section a {
    color: var(--secondary-orange-light); /* Light orange for links */
    text-decoration: none;
    font-weight: 600;
    transition: color 0.25s ease, padding-left 0.25s ease, letter-spacing 0.25s ease; /* Added letter-spacing, slightly slower */
    display: inline-block; /* For padding-left animation */
    position: relative; /* For pseudo-element */
}

/* Animated arrow/icon using ::before pseudo-element. */
.course-links-section a::before, .job-vacancies-section a::before {
    content: '→';
    display: inline-block;
    opacity: 0; /* Initially hidden */
    margin-right: 0px;
    transform: translateX(-5px); /* Initially shifted left */
    transition: opacity 0.25s ease, transform 0.25s ease, margin-right 0.25s ease; /* Slightly slower */
    color: var(--primary-orange);
}

.course-links-section a:hover, .job-vacancies-section a:hover {
    color: var(--primary-orange);
    padding-left: 8px; /* Dynamic indent */
    letter-spacing: 0.3px;
}
/* On link hover, the arrow becomes visible and moves into place. */
.course-links-section a:hover::before, .job-vacancies-section a:hover::before {
    opacity: 1;
    transform: translateX(0);
    margin-right: 5px;
}

/* Registration form has an appearance animation. */
.registration-form {
    margin-top: var(--padding-xlarge);
    background-color: var(--background-content);
    padding: var(--padding-large);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-large); /* Rounded edges */
    text-align: center;
    box-shadow: var(--shadow-main);
    animation: fadeInScaleUp 0.8s 0.2s ease-out forwards;
    opacity: 0; /* Initial state for animation */
}

.registration-form h3{
    color: var(--primary-orange);
    /* animation: revealText 0.7s 0.4s forwards; opacity: 0; */ /* Already applied generally */
}

.registration-form label {
    display: block;
    margin-bottom: var(--padding-xsmall);
    font-weight: 600;
    color: var(--text-primary-on-dark);
    /* animation: revealText 0.6s 0.5s forwards; opacity: 0; */
}

.registration-form p {
    font-size: 0.9em;
    margin-top: var(--padding-medium);
    color: var(--text-secondary-on-dark);
    /* animation: fadeInText 0.8s 0.8s forwards; opacity: 0; */ /* Already has animation from general p */
}



#pages.hidden { /* This is a container for all pages, not a single page */
    display: none;
}

/* Responsiveness */
/* Respects user preference for reduced motion by minimizing animations. */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

@media (max-width: 768px) {
    .container {
        width: 95%;
        padding: var(--padding-medium);
    }

    h1 { font-size: 2.1em; }
    h2 { font-size: 1.6em; }
    h3 { font-size: 1.3em; }

    button {
        min-width: 180px;
        padding: var(--padding-xsmall) var(--padding-medium);
        font-size: 1.1rem;
    }

    .question-counter {
        top: var(--padding-small);
        right: var(--padding-small);
        font-size: 1em;
        padding: var(--padding-xsmall) var(--padding-small);
    }
}

@media (max-width: 480px) {
    body { padding: var(--padding-xsmall); }
    .container {
        padding: var(--padding-small);
        border-radius: var(--border-radius-medium); /* Less rounding on small screens */
    }

    h1 { font-size: 1.8em; }
    h2 { font-size: 1.4em; }

    .question {
        border-radius: var(--border-radius-medium);
        transform: none !important; /* Disable hover transform on small screens if too much */
    }
    .question:hover {
        box-shadow: var(--shadow-interactive); /* Keep shadow change if desired */
    }

    .question-options {
        flex-direction: column;
        align-items: flex-start;
        gap: var(--padding-xsmall); /* Smaller gap for column layout */
    }
    .option-wrapper {
        width: 100%; /* Options take full width */
        transform: none !important; /* Disable hover transform */
    }
    .option-wrapper:hover {
        transform: none; /* Ensure no hover effect if it causes issues */
    }


    input[type="radio"] { width: 22px; height: 22px; }
    /* input[type="radio"]:checked::before { font-size: 14px; } */ /* Checkmark removed */

    button {
        width: 100%; /* Buttons take full width */
        min-width: auto;
        font-size: 1rem;
        padding: var(--padding-small);
        border-radius: var(--border-radius-medium);
        transform: none !important; /* Disable complex hover transforms on small screens */
    }
    button:hover:not(:disabled) {
        background: linear-gradient(145deg, var(--primary-orange), var(--secondary-orange-light));
        box-shadow: 0 6px 15px rgba(255, 140, 0, 0.4); /* Keep simpler shadow */
        /* transform: translateY(-2px) scale(1.02) !important; */ /* Simpler hover, if needed */
    }


    #results.result .result-code { font-size: 2.2em; }
    #results li:hover {
        transform: translateX(4px); /* Simpler hover for lists */
    }

    .question-counter {
        top: var(--padding-xsmall);
        right: var(--padding-xsmall);
        font-size: 0.9em;
        padding: var(--padding-xsmall);
    }
}
